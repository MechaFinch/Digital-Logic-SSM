
This is a reference for the ISA that only includes the necessary details
in a compact form. Since the main ISA includes all possible information
(like microcode) it's annoying to search sometimes.

<opcode> MNEMONIC arguments
<STACK EFFECTS>

This file is generated from the ISA.

Total Opcodes: 222


00 NOP
 No change

01 PUSH byte
 ... ->
 ..., value

02 PUSH word OR label
 ... ->
 ..., val_h, val_l

03 POP
 ..., value ->
 ...

04 POPW
 ..., value_h, value_l ->
 ...

05 POP unsigned byte
 ..., <n bytes> ->
 ...

06 DUP
 ..., value ->
 ..., value, value

07 DUPO1
 ..., value, byte ->
 ..., value, byte, value

08 DUPO2
 ..., value, <2 bytes> ->
 ..., value, <2 bytes>, value

09 DUPON unsigned byte
 ..., value, <n bytes> ->
 ..., value, <n bytes>, value

0A DUPONPB unsigned byte
 ..., value, <n bytes> ->
 ..., value, <n bytes>, value

0B DUPW
 ..., value_h, value_l ->
 ..., value_h, value_l, value_h, value_l

0C DUPWO1
 ..., value_h, value_l, byte ->
 ..., value_h, value_l, byte, value_h, value_low

0D DUPWO2
 ..., value_h, value_l, <2 bytes> ->
 ..., value_h, value_l, <2 bytes>, value_h, value_l

0E DUPWO2PB
 ..., value_h, value_l, <2 bytes> ->
 ..., value_h, value_l, <2 bytes>, value_h, value_l

0F DUPWON unsigned byte
 ..., value_h, value_l, <n bytes> ->
 ..., value_h, value_l, <n bytes>, value_l

10 DUPWONPB unsigned byte
 ..., value_h, value_l, <n bytes> ->
 ..., value_h, value_l, <n bytes>, value_h, value_l

11 SWAP
 ..., value1, value2 ->
 ..., value2, value1

12 SWAPO1
 ..., value1, byte, value2 ->
 ..., value2, byte, value1

13 SWAPO2
 ..., value1, <2 bytes>, value2 ->
 ..., value2, <2 bytes>, value1

14 SWAPON unsigned byte
 ..., value1, <n bytes>, value2 ->
 ..., value2, <n bytes>, value1

15 SWAPONPB unsigned byte
 ..., value1, <n bytes>, value2 ->
 ..., value2, <n bytes>, value1

16 SWAPW
 ..., value1_h, value1_l, value2_h, value2_l ->
 ..., value2_h, value2_l, value1_h, value1_l

17 SWAPWPB
 ..., value1_h, value1_l, value2_h, value2_l ->
 ..., value2_h, value2_l, value1_h, value1_l

18 SWAPWO1
 ..., value1_h, value1_l, byte, value2_h, value2_l ->
 ..., value2_h, value2_l, byte, value1_h, value1_l

19 SWAPWO1PB
 ..., value1_h, value1_l, byte, value2_h, value2_l ->
 ..., value2_h, value2_l, byte, value1_h, value1_l

1A SWAPWO2
 ..., value1_h, value1_l, <2 bytes>, value2_h, value2_l ->
 ..., value2_h, value2_l, <2 bytes>, value1_h, value1_l

1B SWAPWO2PB
 ..., value1_h, value1_l, <2 bytes>, value2_h, value2_l ->
 ..., value2_h, value2_l, <2 bytes>, value1_h, value1_l

1C SWAPWON unsigned byte
 ..., value1_h, value1_l, <n bytes>, value2_h, value2_l ->
 ..., value2_h, value2_l, <n bytes>, value1_h, value1_l

1D SWAPWONPB unsigned byte
 ..., value1_h, value1_l, <n bytes>, value2_h, value2_l ->
 ..., value2_h, value2_l, <n bytes>, value1_h, value1_l

1E SWAPBW
 ..., byte, word_h, word_l ->
 ..., word_h, word_l, byte

1F SWAPWB
 ..., word_h, word_l, byte ->
 ..., byte, word_h, word_l

20 LOAD word OR label
 ... ->
 ..., value

21 LOADW word OR label
 ... ->
 ..., value_h, value_l

22 PLOAD
 ..., pointer_h, pointer_l ->
 ..., value

23 PLOADW
 ..., pointer_h, pointer_l ->
 ..., value_h, value_l

24 ALOAD
 ..., pointer_h, pointer_l, offset ->
 ..., value

25 ALOADW
 ..., pointer_h, pointer_l, offset ->
 ..., value_h, value_l

26 ALOAD word OR label
 ..., offset ->
 ..., value

27 ALOADW word OR label
 ..., offset ->
 ..., value_h, value_l

28 WALOAD
 ..., pointer_h, pointer_l, offset_h, offset_l ->
 ..., value

29 WALOADW
 ..., pointer_h, pointer_l, offset_h, offset_l ->
 ..., value_h, value_l

2A WALOAD word OR label
 ..., offset_h, offset_l ->
 ..., value

2B WALOADW word OR label
 ..., offset_h, offset_l ->
 ..., value_h, value_l

2C BPLOAD
 ... ->
 ..., value

2D BPLOADW
 ... ->
 ..., value_h, value_l

2E BPALOAD
 ..., offset ->
 ..., value

2F BPALOADW
 ..., offset ->
 ..., value_h, value_l

30 BPWALOAD
 ..., offset_h, offset_l ->
 ..., value

31 BPWALOADW
 ..., offset_h, offset_l ->
 ..., value_h, value_l

32 STORE word OR label
 ..., value ->
 ...

33 STOREPB word OR label
 ..., value ->
 ...

34 STOREW word OR label
 ..., value_h, value_l ->
 ...

35 STOREWPB word OR label
 ..., value_h, value_l ->
 ...

36 PSTORE
 ..., pointer_h, pointer_l, value ->
 ...

37 PSTOREPB
 ..., pointer_h, pointer_l, value ->
 ...

38 PSTOREW
 ..., pointer_h, pointer_l, value_h, value_l ->
 ...

39 PSTOREWPB
 ..., pointer_h, pointer_l, value_h, value_l ->
 ...

3A ASTORE
 ..., pointer_h, pointer_l, offset, value ->
 ...

3B ASTOREPB
 ..., pointer_h, pointer_l, offset, value ->
 ...

3C ASTOREW
 ..., pointer_h, pointer_l, offset, value_h, value_l ->
 ...

3D ASTOREWPB
 ..., pointer_h, pointer_l, offset, value_h, value_l ->
 ...

3E ASTORE word OR label
 ..., offset, value ->
 ...

3F ASTOREPB word OR label
 ..., offset, value ->
 ...

40 ASTOREW word OR label
 ..., offset, value_h, value_l ->
 ...

41 ASTOREWPB word OR label
 ..., offset, value_h, value_l ->
 ...

42 WASTORE
 ..., pointer_h, pointer_l, offset_h, offset_l, value ->
 ...

43 WASTOREPB
 ..., pointer_h, pointer_l, offset_h, offset_l, value ->
 ...

44 WASTOREW
 ..., pointer_h, pointer_l, offset_h, offset_l, value_h, value_l ->
 ...

45 WASTOREWPB
 ..., pointer_h, pointer_l, offset_h, offset_l, value_h, value_l ->
 ...

46 WASTORE word OR label
 ..., offset_h, offset_l, value ->
 ...

47 WASTOREPB word OR label
 ..., offset_h, offset_l, value ->
 ...

48 WASTOREW word OR label
 ..., offset_h, offset_l, value_h, value_l ->
 ...

49 WASTOREWPB word OR label
 ..., offset_h, offset_l, value_h, value_l ->
 ...

4A BPSTORE
 ..., value ->
 ...

4B BPSTOREW
 ..., value_h, value_l ->
 ...

4C BPASTORE
 ..., offset, value ->
 ...

4D BPASTOREPB
 ..., offset, value ->
 ...

4E BPASTOREW
 ..., offset, value_h, value_l ->
 ...

4F BPASTOREWPB
 ..., offset, value_h, value_l ->
 ...

50 BPASTORE byte
 ..., value ->
 ...

51 BPASTOREPB byte
 ..., value ->
 ...

52 BPASTOREW byte
 ..., value_h, value_l ->
 ...

53 BPASTOREWPB byte
 ..., value_h, value_l ->
 ...

54 BPWASTORE
 ..., offset_h, offset_l, value ->
 ...

55 BPWASTOREPB
 ..., offset_h, offset_l, value ->
 ...

56 BPWASTOREW
 ..., offset_h, offset_l, value_h, value_l ->
 ...

57 BPWASTOREWPB
 ..., offset_h, offset_l, value_h, value_l ->
 ...

58 BPWASTORE word
 ..., value ->
 ...

59 BPWASTOREPB word
 ..., value ->
 ...

5A BPWASTOREW word
 ..., value_h, value_l ->
 ...

5B BPWASTOREWPB word
 ..., value_h, value_l ->
 ...

5C LEA  BPADD
 ..., offset ->
 ..., addr_h, addr_l

5D LEA byte  BPADD byte
 ... ->
 ..., addr_h, addr_l

5E WLEA  BPADDW
 ..., offset_h, offset_l ->
 ..., addr_h, addr_l

5F WLEA word  BPADDW word
 ... ->
 ..., addr_h, addr_l

60 PUSHBP
 ... ->
 ..., bp_h, bp_l

61 POPBP
 ..., bp_h, bp_l ->
 ...

62 SWAPBP
 ..., value_h, value_l ->
 ..., bp_h, bp_l

63 SETBP word
 No change

64 INCBP
 No change

65 DECBP
 No change

66 PUSHS
 ... ->
 ..., value

67 PUSHSW
 ... ->
 ..., value_h, value_l

68 POPS
 ..., value ->
 ...

69 POPSW
 ..., value_h, value_l ->
 ...

6A MOVS
 ..., pointer_h, pointer_l ->
 ..., pointer+1_h, pointer+1_l

6B MOVSW
 ..., pointer_h, pointer_l ->
 ..., pointer+2_h, pointer+2_l

6C MOVSR
 ..., pointer_h, pointer_l ->
 ..., pointer+1_h, pointer+1_l

6D MOVSRW
 ..., pointer_h, pointer_l ->
 ..., pointer+2_h, pointer+2_l

6E LOOP
 ..., addr_h, addr_l ->
 ...

6F LOOP word
 No change

70 UCE
 ..., valuea, valueb ->
 ...

71 UCE byte
 ..., valuea ->
 ...

72 UCEW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ...

73 UCEW word
 ..., valuea_h, valuea_l ->
 ...

74 UCNE
 ..., valuea, valueb ->
 ...

75 UCNE byte
 ..., valuea ->
 ...

76 UCNEW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ...

77 UCNEW word
 ..., valuea_h, valuea_l ->
 ...

78 UCG
 ..., valuea, valueb ->
 ...

79 UCG byte
 ..., valuea ->
 ...

7A UCGW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ...

7B UCGW word
 ..., valuea_h, valuea_l ->
 ...

7C UCGE
 ..., valuea, valueb ->
 ...

7D UCGE byte
 ..., valuea ->
 ...

7E UCGEW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ...

7F UCGEW word
 ..., valuea_h, valuea_l ->
 ...

80 UCL
 ..., valuea, valueb ->
 ...

81 UCL byte
 ..., valuea ->
 ...

82 UCLW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ...

83 UCLW word
 ..., valuea_h, valuea_l ->
 ...

84 UCLE
 ..., valuea, valueb ->
 ...

85 UCLE byte
 ..., valuea ->
 ...

86 UCLEW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ...

87 UCLEW word
 ..., valuea_h, valuea_l ->
 ...

88 SCE
 ..., valuea, valueb ->
 ...

89 SCE byte
 ..., valuea ->
 ...

8A SCEW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ...

8B SCEW word
 ..., valuea_h, valuea_l ->
 ...

8C SCNE
 ..., valuea, valueb ->
 ...

8D SCNE byte
 ..., valuea ->
 ...

8E SCNEW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ...

8F SCNEW word
 ..., valuea_h, valuea_l ->
 ...

90 SCG
 ..., valuea, valueb ->
 ...

91 SCG byte
 ..., valuea ->
 ...

92 SCGW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ...

93 SCGW word
 ..., valuea_h, valuea_l ->
 ...

94 SCGE
 ..., valuea, valueb ->
 ...

95 SCGE byte
 ..., valuea ->
 ...

96 SCGEW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ...

97 SCGEW word
 ..., valuea_h, valuea_l ->
 ...

98 SCL
 ..., valuea, valueb ->
 ...

99 SCL byte
 ..., valuea ->
 ...

9A SCLW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ...

9B SCLW word
 ..., valuea_h, valuea_l ->
 ...

9C SCLE
 ..., valuea, valueb ->
 ...

9D SCLE byte
 ..., valuea ->
 ...

9E SCLEW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ...

9F SCLEW word
 ..., valuea_h, valuea_l ->
 ...

A0 JMPS
 ..., disp ->
 ...

A1 JMPS byte OR short offset label
 No change

A2 JMPSC
 ..., disp ->
 ...

A3 JMPSC byte OR short offset label
 No change

A4 JMPSN
 ..., disp ->
 ...

A5 JMPSN byte OR short offset label
 No change

A6 JMPL
 ..., addr_h, addr_l ->
 ...

A7 JMPL word OR label
 No change

A8 JMPLC
 ..., addr_h, addr_l ->
 ...

A9 JMPLC word OR label
 No change

AA JMPLN
 ..., addr_h, addr_l ->
 ...

AB JMPLN word OR label
 No change

AC CALL
 ..., addr_h, addr_l ->
 ..., ip_h, ip_l

AD CALL word OR label
 ... ->
 ..., ip_h, ip_l

AE RET
 ..., ip_h, ip_l ->
 ...

AF RET unsigned byte
 ..., <n bytes>, ip_h, ip_l ->
 ...

B0 ENTER byte
 ... ->
 ..., bp_h, bp_l, <value bytes of uninitialized data>

B1 ENTER word
 ... ->
 ..., bp_h, bp_l, <value bytes of uninitialized data>

B2 LEAVE
 ..., bp_h, bp_l, ... ->
 ...

C0 ADD
 ..., valuea, valueb ->
 ..., a+b

C1 ADDC
 ..., valuea, valueb ->
 ..., a+b+c

C2 ADD byte
 ..., value ->
 ..., value+imm

C3 ADDC byte
 ..., value ->
 ..., value+imm+c

C4 ADDW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ..., a+b_h, a+b_l

C5 ADDWC
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ..., a+b+c_h, a+b+c_l

C6 ADDW word
 ..., value_h, value_l ->
 ..., value+imm_h, value+imm_l

C7 ADDWC word
 ..., value_h, value_l ->
 ..., value+imm+c_h, value+imm+c_l

C8 SUB
 ..., valuea, valueb ->
 ..., a-b

C9 SUBB
 ..., valuea, valueb ->
 ..., a-b-c

CA SUB byte
 ..., value ->
 ..., value-imm

CB SUBB byte
 ..., value ->
 ..., value-imm-c

CC SUBW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ..., a-b_h, a-b_l

CD SUBWB
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ..., a-b-c_h, a-b-c_l

CE SUBW word
 ..., value_h, value_l ->
 ..., value-imm_h, value-imm_l

CF SUBWB word
 ..., value_h, value_l ->
 ..., value-imm-c_h, value-imm-c_l

D0 AND
 ..., valuea, valueb ->
 ..., a&b

D1 AND byte
 ..., value ->
 ..., value&imm

D2 ANDW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ..., a&b_h, a&b_l

D3 ANDW word
 ..., value_h, value_l ->
 ..., value&imm_h, value&imm_l

D4 OR
 ..., valuea, valueb ->
 ..., a|b

D5 OR byte
 ..., value ->
 ..., value|imm

D6 ORW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ..., a|b_h, a|b_l

D7 ORW word
 ..., value_h, value_l ->
 ..., value|imm_h, value|imm_l

D8 XOR
 ..., valuea, valueb ->
 ..., a^b

D9 XOR byte
 ..., value ->
 ..., value^imm

DA XORW
 ..., valuea_h, valuea_l, valueb_h, valueb_l ->
 ..., a^b_h, a^b_l

DB XORW word
 ..., value_h, value_l ->
 ..., value^imm_h, value^imm_l

DC NOT
 ..., value ->
 ..., !value

DD NOTW
 ..., value_h, value_l ->
 ..., !value_h, !value_l

DE SHL
 ..., value ->
 ..., value<<1

DF SHLW
 ..., value_h, value_l ->
 ..., value<<1_h, value<<1_l

E0 SRA
 ..., value ->
 ..., value>>1

E1 SRAW
 ..., value_h, value_l ->
 ..., value>>1_h, value>>1_l

E2 SRL
 ..., value ->
 ..., value>>>1

E3 SRLW
 ..., value_h, value_l ->
 ..., value>>>1_h, value>>>1_l

F9 READ
 ... ->
 ..., value

FA READW
 ... ->
 ..., value_h, value_l

FB WRITE
 ..., value ->
 ...

FC WRITEW
 ..., value_h, value_l ->
 ...

FD WRITEI byte
 No change

FE WRITEIW word
 No change

FF WRITEUIW byte
 ..., value ->
 ...


