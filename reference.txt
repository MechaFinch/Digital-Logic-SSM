
This is a reference for the ISA that only includes the necessary details
in a compact form. Since the main ISA includes all possible information
(like microcode) it's annoying to search sometimes.

<opcode> MNEMONIC arguments
<STACK EFFECTS>

This file is generated from the ISA.


00 NOP
 No change

01 PUSH byte
 ... ->
 ..., value

02 PUSH word OR label
 ... ->
 ..., val_h, val_l

03 POP
 ..., value ->
 ...

04 POP2
 ..., value1, value2 ->
 ...

05 POP unsigned byte
 ..., <n bytes> ->
 ...

06 DUP
 ..., value ->
 ..., value, value

07 DUPO1
 ..., value, byte ->
 ..., value, byte, value

08 DUPO2
 ..., value, byte1, byte2 ->
 ..., value, byte1, byte2, value

09 DUPON unsigned byte
 ..., value, <n bytes> ->
 ..., value, <n bytes>, value

0A DUP2
 ..., value_h, value_l ->
 ..., value_h, value_l, value_h, value_l

0B DUP2O1
 ..., value_h, value_l, byte ->
 ..., value_h, value_l, byte, value_h, value_low

0C DUP2O2
 ..., value_h, value_l, byte1, byte2 ->
 ..., value_h, value_l, byte1, byte2, value_h, value_l

0D DUP2O2PB
 ..., value_h, value_l, byte1, byte2 ->
 ..., value_h, value_l, byte1, byte2, value_h, value_l

0E DUP2ON unsigned byte
 ..., value_h, value_l, <n bytes> ->
 ..., value_h, value_l, <n bytes>, value_l

0F DUP2ONPB unsigned byte
 ..., value_h, value_l, <n bytes> ->
 ..., value_h, value_l, <n bytes>, value_h, value_l

10 SWAP
 ..., value1, value2 ->
 ..., value2, value1

11 SWAP2
 ..., value1_h, value1_l, value2_h, value2_l ->
 ..., value2_h, value2_l, value1_h, value1_l

20 LOAD word OR label
 ... ->
 ..., value

21 PLOAD
 ..., pointer_h, pointer_l ->
 ..., value

22 ALOAD
 ..., pointer_h, pointer_l, offset ->
 ..., value

23 ALOAD word OR label
 ..., offset ->
 ..., value

24 WALOAD
 ..., offset_h, offset_l ->
 ..., value

25 WALOAD word OR label
 ..., offset_h, offset_l ->
 ..., value

26 BPLOAD
 ... ->
 ..., value

27 BPALOAD
 ..., offset ->
 ..., value

28 BPWALOAD
 ..., offset_h, offset_l ->
 ..., value

29 STORE word OR label
 ..., value ->
 ...

2A STOREPB word OR label
 ..., value ->
 ...

2B PSTORE
 ..., pointer_h, pointer_l, value ->
 ...

2C PSTOREPB
 ..., pointer_h, pointer_l, value ->
 ...

2D ASTORE
 ..., pointer_h, pointer_l, offset, value ->
 ...

2E ASTOREPB
 ..., pointer_h, pointer_l, offset, value ->
 ...

2F ASTORE word OR label
 ..., offset, value ->
 ...

30 ASTOREPB word OR label
 ..., offset, value ->
 ...

31 WASTORE
 ..., pointer_h, pointer_l, offset_h, offset_l, value ->
 ...

32 WASTOREPB
 ..., pointer_h, pointer_l, offset_h, offset_l, value ->
 ...

33 WASTORE word OR label
 ..., offset_h, offset_l, value ->
 ...

34 WASTOREPB word OR label
 ..., offset_h, offset_l, value ->
 ...

35 BPSTORE
 ..., value ->
 ...

36 BPASTORE
 ..., offset, value ->
 ...

37 BPASTOREPB
 ..., offset, value ->
 ...

38 BPASTORE byte
 ..., value ->
 ...

39 BPASTOREPB byte
 ..., value ->
 ...

3A BPWASTORE
 ..., offset_h, offset_l, value ->
 ...

3B BPWASTOREPB
 ..., offset_h, offset_l, value ->
 ...

3C BPWASTORE word
 ..., value ->
 ...

3D BPWASTOREPB word
 ..., value ->
 ...

 PUSHBP

 POPBP

 SETBP

 PUSHS

 POPS

 INCBP

 DECBP

 CEZ

 CNZ

 CGZ

 CGEZ

 CLZ

 CLEZ

 CE

 CNE

 CG

 CGE

 CL

 CLE

 CEI byte

 CNEI byte

 CGI byte

 CGEI byte

 CLI byte

 CLEI byte

80 JMPS
 ..., disp ->
 ...

81 JMPS byte OR short offset label
 No change

82 JMPSC
 ..., disp ->
 ...

83 JMPSC byte OR short offset label
 No change

84 JMPSN
 ..., disp ->
 ...

85 JMPSN byte OR short offset label
 No change

86 JMPL
 ..., addr_h, addr_l ->
 ...

87 JMPL word OR label
 No change

88 JMPLC
 ..., addr_h, addr_l ->
 ...

89 JMPLC word OR label
 No change

8A JMPLN
 ..., addr_h, addr_l ->
 ...

8B JMPLN word OR label
 No change

8C CALL
 ..., addr_h, addr_l ->
 ..., ip_h, ip_l

8D CALL word OR label
 ... ->
 ..., ip_h, ip_l

8E RET
 ..., ip_h, ip_l ->
 ...

8F RET unsigned byte
 ..., <n bytes>, ip_h, ip_l ->
 ...

90 ENTER byte
 ... ->
 ..., bp_h, bp_l, <value bytes of uninitialized data>

91 ENTER word
 ... ->
 ..., bp_h, bp_l, <value bytes of uninitialized data>

92 LEAVE
 ..., bp_h, bp_l, ... ->
 ...

FE READ
 ... ->
 ..., value

FF WRITE
 ..., value ->
 ...

